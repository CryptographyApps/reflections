How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It limited the number of lines of code that needed to be looked at.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If a bug gets introduced you can compare the buggy code with previous versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Choosing manually could be a problem if the user forgets to commit at regular 
    or logical intervals.  Auto saving would have versions that do not necessarily 
    make since.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is probably used more for software design where different files could 
    depend on one another to work properly.

How can you use the commands git log and git diff to view the history of files?

    You can use git log to get a general overview of changes and git diff plus 2
    commit id's to view the actual changes.

How might using version control make you more confident to make changes that
could break something?

    When total confusion breaks out you are reassured by the knowledge that you
    can return to a point when saner heads prevailed.

Now that you have your workspace set up, what do you want to try using Git for?

    I believe that git has become a skill in and of itself, I must know why!
